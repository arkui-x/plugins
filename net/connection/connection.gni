# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

SUBSYSTEM_DIR = "//foundation/communication"
NETMANAGER_BASE_ROOT = "$SUBSYSTEM_DIR/netmanager_base"
WORK_DIR = "$NETMANAGER_BASE_ROOT/frameworks/js/napi/connection"
INNERKITS_ROOT = "$NETMANAGER_BASE_ROOT/interfaces/innerkits"
NETCONNMANAGER_INNERKITS_SOURCE_DIR =
    "$NETMANAGER_BASE_ROOT/frameworks/native/netconnclient"
PLATFORM_ROOT = "//foundation/graphic/graphic_2d/rosen/modules/platform"

utils_include = [
  "$NETMANAGER_BASE_ROOT/utils/common_utils/include",
  "$NETMANAGER_BASE_ROOT/utils/errorcode_utils/include",
  "$NETMANAGER_BASE_ROOT/utils/log/include",
  "$NETMANAGER_BASE_ROOT/utils/napi_utils/include",
  "$INNERKITS_ROOT/netpolicyclient/include",
  "$INNERKITS_ROOT/netstatsclient/include",
  "//commonlibrary/c_utils/base/include",
  "$PLATFORM_ROOT/ipc_core",
]

utils_source = [
  "$NETMANAGER_BASE_ROOT/utils/errorcode_utils/src/errorcode_convertor.cpp",
  "$NETMANAGER_BASE_ROOT/utils/napi_utils/src/base_context.cpp",
  "$NETMANAGER_BASE_ROOT/utils/napi_utils/src/event_listener.cpp",
  "$NETMANAGER_BASE_ROOT/utils/napi_utils/src/event_manager.cpp",
  "$NETMANAGER_BASE_ROOT/utils/napi_utils/src/module_template.cpp",
  "$NETMANAGER_BASE_ROOT/utils/napi_utils/src/napi_utils.cpp",
  "$NETMANAGER_BASE_ROOT/utils/common_utils/src/netmanager_base_common_utils.cpp",
]

connection_include = [
  "$WORK_DIR/async_context/include",
  "$WORK_DIR/async_work/include",
  "$WORK_DIR/constant/include",
  "$WORK_DIR/connection_exec/include",
  "$WORK_DIR/connection_module/include",
  "$WORK_DIR/net_handle_interface/include",
  "$WORK_DIR/observer/include",
  "$WORK_DIR/options/include",
  "$INNERKITS_ROOT/netconnclient/include/proxy",
  "$INNERKITS_ROOT/netconnclient/include",
  "$INNERKITS_ROOT/include",
  "//plugins/net/connection",
  "//plugins/net",
  "//plugins/net/connection/android/java/jni",
  "//plugins/interfaces",
  "//plugins/interfaces/native",
]

connection_sources = [
  "$NETCONNMANAGER_INNERKITS_SOURCE_DIR/src/http_proxy.cpp",
  "$NETCONNMANAGER_INNERKITS_SOURCE_DIR/src/inet_addr.cpp",
  "$NETCONNMANAGER_INNERKITS_SOURCE_DIR/src/net_all_capabilities.cpp",
  "$NETCONNMANAGER_INNERKITS_SOURCE_DIR/src/net_link_info.cpp",
  "$NETCONNMANAGER_INNERKITS_SOURCE_DIR/src/net_specifier.cpp",
  "$NETCONNMANAGER_INNERKITS_SOURCE_DIR/src/route.cpp",
  "$NETMANAGER_BASE_ROOT/frameworks/native/netconnclient/src/proxy/net_conn_callback_stub.cpp",
  "$WORK_DIR/async_context/src/bindsocket_context.cpp",
  "$WORK_DIR/async_context/src/deletecustomdnsrule_context.cpp",
  "$WORK_DIR/async_context/src/deletecustomdnsrules_context.cpp",
  "$WORK_DIR/async_context/src/getaddressbyname_context.cpp",
  "$WORK_DIR/async_context/src/getappnet_context.cpp",
  "$WORK_DIR/async_context/src/getdefaultnet_context.cpp",
  "$WORK_DIR/async_context/src/gethttpproxy_context.cpp",
  "$WORK_DIR/async_context/src/none_params_context.cpp",
  "$WORK_DIR/async_context/src/parse_nethandle_context.cpp",
  "$WORK_DIR/async_context/src/register_context.cpp",
  "$WORK_DIR/async_context/src/setappnet_context.cpp",
  "$WORK_DIR/async_context/src/setcustomdnsrule_context.cpp",
  "$WORK_DIR/async_context/src/setglobalhttpproxy_context.cpp",
  "$WORK_DIR/async_work/src/connection_async_work.cpp",
  "$WORK_DIR/observer/src/net_conn_callback_observer.cpp",
  "$WORK_DIR/options/src/net_address.cpp",
  "$WORK_DIR/options/src/netconnection.cpp",
  "connection_exec.cpp",
  "connection_module.cpp",
  "net_handle.cpp",
  "net_handle_interface.cpp",
]
