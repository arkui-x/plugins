# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

template("hiviewdfx_hiappevent_static") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines
    cflags_cc += invoker.cflags_cc
    include_dirs = [
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/include",
      "//foundation/appframework/hiviewdfx/hiappevent/native/include",
      "//foundation/appframework/hiviewdfx/hiappevent/native/include/observer",
      "//foundation/appframework/hiviewdfx/hiappevent/native/include/utility",
      "//foundation/appframework/hiviewdfx/hiappevent/native/include/clean",
      "//foundation/appframework/hiviewdfx/hiappevent/js/napi/include",
      "//commonlibrary/c_utils/base/include",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
      "//plugins/hiviewdfx/hiappevent/frameworks/native/libhiappevent/include",
      "//third_party/jsoncpp/include",
      "//plugins/hiviewdfx/hiappevent/frameworks/native/libhiappevent/utility/include",
      "//plugins/hiviewdfx/hiappevent/interfaces/native/kits/include",
    ]

    sources = [
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_app_event_holder.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_hiappevent_builder.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_hiappevent_config.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_hiappevent_init.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_hiappevent_js_v9.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_hiappevent_userinfo.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_hiappevent_watch.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_hiappevent_write.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/js/napi/src/napi_param_builder.cpp",
      "//plugins/hiviewdfx/hiappevent/frameworks/native/libhiappevent/utility/app_event_stat.cpp",
    ]

    deps = [ "//plugins/interfaces/native:ace_plugin_util_${platform}" ]

    subsystem_name = "plugins"
    part_name = "hiviewdfx_hiappevent"
  }
}

foreach(item, ace_platforms) {
  hiviewdfx_hiappevent_static("hiviewdfx_hiappevent_static_" + item.name) {
    platform = item.name

    defines = []
    cflags_cc = []
    config = {
    }

    if (defined(item.config)) {
      config = item.config
    }

    if (defined(config.defines)) {
      defines = config.defines
    }

    if (defined(config.cflags_cc)) {
      cflags_cc = config.cflags_cc
    }
  }
}
