# Copyright (C) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/security/crypto_framework/common/common.gni")
import("//base/security/crypto_framework/plugin/plugin.gni")
import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

config("plugin_config") {
  include_dirs = [
    "//base/security/crypto_framework/interfaces/inner_api/algorithm_parameter",
    "//base/security/crypto_framework/interfaces/inner_api/common",
    "//base/security/crypto_framework/interfaces/inner_api/crypto_operation",
    "//base/security/crypto_framework/interfaces/inner_api/key",
    "//base/security/crypto_framework/frameworks/spi",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
  ]
}

ohos_source_set("crypto_openssl_plugin_lib") {
  subsystem_name = "plugins"
  part_name = "cryptoframework"
  public_configs = [ ":plugin_config" ]
  include_dirs = [
    "//commonlibrary/c_utils/base/include",
    "//third_party/openssl/include/",
    "//third_party/bounds_checking_function/include",
  ]
  include_dirs += plugin_inc_path + crypto_framwork_common_inc_path

  sources = plugin_files

  cflags = [
    "-DHILOG_ENABLE",
    "-fPIC",
    "-Wall",
  ]

  deps = [
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog_${target_os}",
    "//plugins/libs/securec:sec_${target_os}",
    "//plugins/security/cryptoframework/common:crypto_plugin_common",
  ]

  if (target_os == "android") {
    deps += [
      "//third_party/openssl:libcrypto_shared",
      "//third_party/openssl:libssl_shared",
    ]
  } else if (target_os == "ios") {
    deps += [
      "//third_party/openssl:libcrypto_static",
      "//third_party/openssl:libssl_static",
    ]
  }
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  defines = [ "OPENSSL_SUPPRESS_DEPRECATED" ]
}
